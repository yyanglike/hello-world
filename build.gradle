plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.2"
     id("io.micronaut.aot") version "3.6.3"
}

version = "0.1"
group = "hello.world"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3-http-client")
    implementation('org.redisson:redisson-micronaut-30:3.18.0')
    implementation("com.zaxxer:HikariCP:5.0.1")
    runtimeOnly("mysql:mysql-connector-java")
    implementation("io.micronaut.nats:micronaut-nats")


    // apple M1
//    implementation("com.kohlschutter.junixsocket:junixsocket-common:2.6.1")
//    implementation("com.kohlschutter.junixsocket:junixsocket-native-common:2.6.1")
//    implementation("com.github.docker-java:docker-java:3.2.14")


}


application {
    mainClass.set("hello.world.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
     aot {
         // Please review carefully the optimizations enabled below
         // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
         optimizeServiceLoading = true
         convertYamlToJava = true
         precomputeOperations = true
         cacheEnvironment = true
         optimizeClassLoading = true
         deduceEnvironment = true
         optimizeNetty = true
     }
}



graalvmNative {
    binaries{
        main{
            buildArgs.add('--verbose')
            // buildArgs.add('--gc=G1')
        }
    }
}


