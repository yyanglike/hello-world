plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.3"
}

version = "0.1"
group = "hello.world"

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation ('org.projectlombok:lombok:1.18.20')
    annotationProcessor('org.projectlombok:lombok:1.18.20')
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("jakarta.annotation:jakarta.annotation-api")
//    runtimeOnly("ch.qos.logback:logback-classic")
//    implementation("ch.qos.logback:logback-core:1.4.5")
////    testImplementation("ch.qos.logback:logback-classic:1.4.5")
//    implementation("org.slf4j:slf4j-api:2.0.6")

    compileOnly("org.graalvm.nativeimage:svm")


    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3-http-client")
    implementation('org.redisson:redisson-micronaut-30:3.18.0')
//    implementation("com.zaxxer:HikariCP:5.0.1")
//    runtimeOnly("mysql:mysql-connector-java")
    implementation("io.micronaut.nats:micronaut-nats")
    implementation("io.micronaut:micronaut-inject-java:3.7.4")
    annotationProcessor("io.micronaut.data:micronaut-data-hibernate-jpa")
    //database
    implementation("com.h2database:h2:2.1.210")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    runtimeOnly("io.micronaut.sql:micronaut-jdbc-hikari")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("jakarta.persistence:jakarta.persistence-api:3.1.0")

    annotationProcessor("io.micronaut.serde:micronaut-serde-processor:1.0.1")
    implementation('com.google.code.gson:gson:2.10')
    implementation('org.java-websocket:Java-WebSocket:1.5.4-SNAPSHOT')


    //openapi
    annotationProcessor("io.micronaut.openapi:micronaut-openapi:4.7.1")
    implementation("io.swagger.core.v3:swagger-annotations")

    //cache
    implementation("io.micronaut.cache:micronaut-cache-caffeine")
    implementation("io.micronaut.cache:micronaut-cache-ehcache:3.5.0")


    //http client
    implementation("io.micronaut:micronaut-http-client")
}


application {
    mainClass.set("hello.world.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }

}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute(module("io.micronaut:micronaut-jackson-databind"))
                .using(module("io.micronaut.serde:micronaut-serde-jackson:1.0.1"))
    }
}



